1. DataSeries
 - based an Array, can wrap an Array;
 - handles composite data, splits data into channels;
 - get/set access at index per channel.

2. MultiChartView
 - UI element to visualize DataSeries objects,
 - structure: points, channels, chart;
 - DataSeries are visualized by channels;
 - custom visualizations;
 - select channel(s);
 - add/select/remove data point(s);
 - min/max values specify data range per channel;
 - scroll and zoom on both axes.

3. Visualizing a Sequence
 - Complex data structure:
    Sequence struct {
       int delta;
       Array<Frame> frames };
    Frame Array<Command>;
    Command* UINT8;
 - required visualizations: line, bar.

4. Sequence as DataSeries
4.1. Indexing
      - problem: Sequence uses offseting via the delta values,
      - has to read the frames sequentially to reach the desired index; simple but slow,
      or
      - has to use a mapping between indices and frames; possibly creates a very scarce table with many blank entries.
4.2. Channel selection
      - a channel represents a command type,
      - command parameters are vectors,
      - channel visualization has to handle scalar or vector inputs.
4.3. The get and set methods
      - void* get(int index, int chnId);
      - void* set(int index, int chnId, void* data);
